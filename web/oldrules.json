{
  "rules": {
  	"users": {
      "$uid" : {
        ".read" : "auth !== null && auth.uid === $uid",
        "$spreadsheetId" : {
          ".write" : "newData.exists() === root.child('spreadsheets').child($spreadsheetId).child('users').hasChild($uid)",
          ".validate" : "newData.isString() && newData.val().length >= 3 && newData.val().length < 128"
        }
      }
    },
  	"spreadsheets": {
      "$spreadsheetId" : {
      	".read" : "auth !== null && data.child('users').hasChild(auth.uid)",
        ".write" : "auth !== null && !data.exists() && newData.exists() && newData.child('users').child(auth.uid).child('admin').val() === true",
        ".validate" : "newData.hasChildren(['name','users'])",
        "name" : {
          ".write": "auth !== null && newData.exists() && data.parent().child('users').child(auth.uid).child('admin').val() === true",
          ".validate" : "newData.isString() && newData.val().length >= 3 && newData.val().length < 128"
        },
        "users":{
          "$uid": {
            ".write": "auth !== null && newData.exists() && data.parent().child(auth.uid).child('admin').val() === true",
            ".validate" : "newData.hasChildren(['name','admin','active'])",
            "name" : {
              ".validate" : "newData.isString() && newData.val().length >= 3 && newData.val().length < 128"
            },
            "admin" : {
              ".validate" : "newData.isBoolean() && newData.val() === true || auth.uid !== $uid"
            },
            "active" : {
              ".validate" : "newData.isBoolean()"
            }
          }
        },
        "$other" : {
          ".validate" : false
        }
      }
    },
    "applications":{
      "$spreadsheetId" : {
      	".read" : "auth !== null && root.child('spreadsheets').child($spreadsheetId).child('users').child(auth.uid).child('admin').val() === true",
        ".validate" : "root.child('spreadsheets').hasChild($spreadsheetId)",
        "$uid" : {
          ".write" : "auth !== null && newData.exists() ? auth.uid === $uid : root.child('spreadsheets').child($spreadsheetId).child('users').child(auth.uid).child('admin').val() === true",
          ".validate" : "newData.isString() && newData.val().length >= 3 && newData.val().length < 128"
        }
      }
    },
    "transactions":{
      "$spreadsheetId" : {
        ".read" : "auth != null && root.child('spreadsheets').child($spreadsheetId).child('users').hasChild(auth.uid)",
        ".validate" : "root.child('spreadsheets').hasChild($spreadsheetId)",
        "$transactionId":{
          ".write" : "!data.exists() && newData.exists() && newData.getPriority() === now && !newData.hasChild('reversed')",
          ".validate" : "newData.hasChildren(['comment','by','from','to'])",
          "comment" : {
            ".validate" : "newData.isString() && newData.val().length >= 3 && newData.val().length < 128"
          },
          "by" : {
            ".validate" : "auth != null && root.child('spreadsheets').child($spreadsheetId).child('users').child(auth.uid).child('active').val() === true && newData.val() === auth.uid"
          },
          "reversed" : {
            ".write" : "!data.exists() && newData.exists()",
            ".validate" : "newData.hasChildren(['comment','by','at'])",
            "comment" : {
              ".validate" : "newData.isString() && newData.val().length >= 3 && newData.val().length < 128"
            },
            "by" : {
            	".validate" : "auth != null && root.child('spreadsheets').child($spreadsheetId).child('users').child(auth.uid).child('active').val() === true && newData.val() === auth.uid"
            },
            "at" : {
              ".validate" : "newData.val() === now"
            },
            "$other" : {
              ".validate" : false
            }
          },
          "$from_or_to" : {
            ".validate" : "($from_or_to === 'from' || $from_or_to === 'to') && newData.hasChildren()",
            "$uid" : {
              ".validate" : "root.child('spreadsheets').child($spreadsheetId).child('users').child($uid).child('active').val() === true && newData.isNumber() && newData.val() > 0 && newData.val() % 1 === 0"
            }
          }
        }
      }
    },
    "$other" : {
      ".validate": false
    }
  }
}
